==518== Memcheck, a memory error detector
==518== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==518== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==518== Command: ./lab_a
==518== 
==518== Invalid read of size 4
==518==    at 0x109343: printf (stdio2.h:107)
==518==    by 0x109343: main (lab_a.c:71)
==518==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==518== 
==518== 
==518== Process terminating with default action of signal 11 (SIGSEGV)
==518==  Access not within mapped region at address 0x0
==518==    at 0x109343: printf (stdio2.h:107)
==518==    by 0x109343: main (lab_a.c:71)
==518==  If you believe this happened as a result of a stack
==518==  overflow in your program's main thread (unlikely but
==518==  possible), you can try to increase the size of the
==518==  main thread stack using the --main-stacksize= flag.
==518==  The main thread stack size used in this run was 8388608.
Program 0x1091a9 
Static data 0x10c040 
Ram data 0x10c080 
Heap Data 0x1fff0000a8 
Stack data 0x1fff0000b0 
Passing the 2x function a 2, i got 4 
Passing the 3x function a 2, i got 6 
stack data values before free: 1 'Stack' 
Heap data values before free: 2 'Pointer' 
freeing of heapData_p failed pointer set to NULL
==518== 
==518== HEAP SUMMARY:
==518==     in use at exit: 0 bytes in 0 blocks
==518==   total heap usage: 2 allocs, 2 frees, 4,140 bytes allocated
==518== 
==518== All heap blocks were freed -- no leaks are possible
==518== 
==518== For lists of detected and suppressed errors, rerun with: -s
==518== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

1. failed due to the attempt at using the heapData pointer after freeing it
   however freeing gets rid of the memory leak.


==527== Memcheck, a memory error detector
==527== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==527== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==527== Command: ./lab_a
==527== 
Program 0x109189 
Static data 0x10c040 
Ram data 0x10c080 
Heap Data 0x1fff0000a8 
Stack data 0x1fff0000b0 
Passing the 2x function a 2, i got 4 
Passing the 3x function a 2, i got 6 
stack data values before free: 1 'Stack' 
Heap data values before free: 2 'Pointer' 
Heap data values after free: 2 'Pointer' 
==527== 
==527== HEAP SUMMARY:
==527==     in use at exit: 44 bytes in 1 blocks
==527==   total heap usage: 2 allocs, 1 frees, 4,140 bytes allocated
==527== 
==527== 44 bytes in 1 blocks are definitely lost in loss record 1 of 1
==527==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==527==    by 0x1091AB: main (lab_a.c:37)
==527== 
==527== LEAK SUMMARY:
==527==    definitely lost: 44 bytes in 1 blocks
==527==    indirectly lost: 0 bytes in 0 blocks
==527==      possibly lost: 0 bytes in 0 blocks
==527==    still reachable: 0 bytes in 0 blocks
==527==         suppressed: 0 bytes in 0 blocks
==527== 
==527== For lists of detected and suppressed errors, rerun with: -s
==527== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

2. memory leaks may occur since the heapData pointer was never freed but gets rid of the segmentation fault.


==530== Memcheck, a memory error detector
==530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==530== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==530== Command: ./lab_b
==530== 
Print poly by reference: 0.000000 2.000000 4.000000 6.000000 8.000000 10.000000 12.000000 14.000000 16.000000 18.000000 
Print poly by value: 0.000000 2.000000 4.000000 6.000000 8.000000 10.000000 12.000000 14.000000 16.000000 18.000000 
Print poly by reference: 0.000000 2.000000 4.000000 6.000000 8.000000 10.000000 12.000000 14.000000 16.000000 18.000000 
Print poly by value: 0.000000 2.000000 4.000000 6.000000 8.000000 10.000000 12.000000 14.000000 16.000000 18.000000 
==530== 
==530== HEAP SUMMARY:
==530==     in use at exit: 0 bytes in 0 blocks
==530==   total heap usage: 4 allocs, 4 frees, 4,272 bytes allocated
==530== 
==530== All heap blocks were freed -- no leaks are possible
==530== 
==530== For lists of detected and suppressed errors, rerun with: -s
==530== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

3. output for the execution of in lab part 2.


==532== Memcheck, a memory error detector
==532== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==532== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==532== Command: ./lab_c
==532== 
Printing 2 node linked list 
node 1 contains the string one 
node 2 contains the string two 
==532== 
==532== HEAP SUMMARY:
==532==     in use at exit: 0 bytes in 0 blocks
==532==   total heap usage: 4 allocs, 4 frees, 4,224 bytes allocated
==532== 
==532== All heap blocks were freed -- no leaks are possible
==532== 
==532== For lists of detected and suppressed errors, rerun with: -s
==532== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

4. output for teh execution of the inlab part 3 code
